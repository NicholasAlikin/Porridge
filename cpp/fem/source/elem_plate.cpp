#include "elem_plate.hpp"

namespace fem {


math::vector_t<double,2> ElemPLATE::stiffnessStatic(const math::vector<double>& property
	 								 		 , const math::vector<double>& material
									 		 , const math::vector<double>& parameters)
{
	double E = material[ElemPLATE::matl::E]
    , mu = material[ElemPLATE::matl::mu]
	, a = parameters[ElemPLATE::prms::L1]
	, b = parameters[ElemPLATE::prms::L2]
	, h = property[ElemPLATE::prop::h]
	, K6rot = property[ElemPLATE::prop::K6rot];
	double a2 = a*a, b2 = b*b, h2 = h*h, mu2 = mu*mu;
	double a3 = a2*a, b3 = b2*b, h3 = h2*h;
	double a4 = a3*a, b4 = b3*b;
	
	
	math::vector_t<double,2> K = {
		{ (E*a*h*mu)/(6*b*(mu2 - 1)) - (E*h*(120*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)),                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, (E*h*(120*a2*b4 - 30*a4*b2))/(360*a3*b3*(mu2 - 1)) + (E*a*h*mu)/(12*b*(mu2 - 1)),                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*h*(60*a2*b4 + 30*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(12*b*(mu2 - 1)),                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, - (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(6*b*(mu2 - 1)),                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                  - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),  (E*b*h*mu)/(6*a*(mu2 - 1)) - (E*h*(60*a2*b4 + 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),   (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(6*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),  (E*h*(30*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(12*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)), (E*b*h*mu)/(12*a*(mu2 - 1)) - (E*h*(30*a2*b4 - 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                                                               0,                                                                                0, (E*h3*mu)/(15*a*b*(mu2 - 1)) - (E*h*(120*a4*h2 + 120*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),     (E*h3*mu)/(15*a*(mu2 - 1)) + (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),     - (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*b4*h2 - 60*a4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*(mu2 - 1)),       (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,   (E*h3*mu)/(15*a*b*(mu2 - 1)) + (E*h*(60*a4*h2 + 60*b4*h2 - 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),     (E*h3*mu)/(60*a*(mu2 - 1)) + (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),     - (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*a4*h2 - 60*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*a*(mu2 - 1)),       (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,               (E*h3*mu)/(15*a*(mu2 - 1)) + (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*b*h3*mu)/(45*a*(mu2 - 1)) - (E*h*(8*a2*b4*h2 + 40*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                 (E*h3*mu)/(12*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*(mu2 - 1)),  (E*h*(8*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(45*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*b*h3*mu)/(180*a*(mu2 - 1)) - (E*h*(2*a2*b4*h2 + 10*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*h*(2*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(180*a*(mu2 - 1)),                                                                                        0,        0},
		{                                                                               0,                                                                                0,             - (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                               (E*h3*mu)/(12*(mu2 - 1)),    (E*a*h3*mu)/(45*b*(mu2 - 1)) - (E*h*(40*a2*b4*h2 + 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*b*(mu2 - 1)),                                                                                      0, - (E*h*(20*a2*b4*h2 - 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(180*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*b*(mu2 - 1)) + (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,   (E*a*h3*mu)/(180*b*(mu2 - 1)) - (E*h*(10*a2*b4*h2 + 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,  - (E*h*(20*a2*b4*h2 - 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(45*b*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0,    K6rot,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3},
		{(E*h*(120*a2*b4 - 30*a4*b2))/(360*a3*b3*(mu2 - 1)) + (E*a*h*mu)/(12*b*(mu2 - 1)),                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*a*h*mu)/(6*b*(mu2 - 1)) - (E*h*(120*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)),                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, - (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(6*b*(mu2 - 1)),                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*h*(60*a2*b4 + 30*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(12*b*(mu2 - 1)),                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                  (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),   (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(6*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),  (E*b*h*mu)/(6*a*(mu2 - 1)) - (E*h*(60*a2*b4 + 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)), (E*b*h*mu)/(12*a*(mu2 - 1)) - (E*h*(30*a2*b4 - 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),  (E*h*(30*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(12*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                                                               0,                                                                                0,  (E*h*(120*b4*h2 - 60*a4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*(mu2 - 1)),       (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*b*(mu2 - 1)),        0,                                                                                0,                                                                                0, (E*h3*mu)/(15*a*b*(mu2 - 1)) - (E*h*(120*a4*h2 + 120*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),     (E*h3*mu)/(15*a*(mu2 - 1)) + (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(15*b*(mu2 - 1)) + (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*a4*h2 - 60*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*a*(mu2 - 1)),       (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,   (E*h3*mu)/(15*a*b*(mu2 - 1)) + (E*h*(60*a4*h2 + 60*b4*h2 - 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),     (E*h3*mu)/(60*a*(mu2 - 1)) + (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(60*b*(mu2 - 1)) + (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,               (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*(mu2 - 1)),  (E*h*(8*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(45*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*a*(mu2 - 1)) + (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*b*h3*mu)/(45*a*(mu2 - 1)) - (E*h*(8*a2*b4*h2 + 40*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                -(E*h3*mu)/(12*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*h*(2*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(180*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*b*h3*mu)/(180*a*(mu2 - 1)) - (E*h*(2*a2*b4*h2 + 10*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                        0,        0},
		{                                                                               0,                                                                                0,               (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0, - (E*h*(20*a2*b4*h2 - 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(180*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*b*(mu2 - 1)) + (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                              -(E*h3*mu)/(12*(mu2 - 1)),    (E*a*h3*mu)/(45*b*(mu2 - 1)) - (E*h*(40*a2*b4*h2 + 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*b*(mu2 - 1)),                                                                                      0,  - (E*h*(20*a2*b4*h2 - 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(45*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,   (E*a*h3*mu)/(180*b*(mu2 - 1)) - (E*h*(10*a2*b4*h2 + 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0,    K6rot,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3},
		{ (E*h*(60*a2*b4 + 30*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(12*b*(mu2 - 1)),                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, - (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(6*b*(mu2 - 1)),                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*a*h*mu)/(6*b*(mu2 - 1)) - (E*h*(120*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)),                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, (E*h*(120*a2*b4 - 30*a4*b2))/(360*a3*b3*(mu2 - 1)) + (E*a*h*mu)/(12*b*(mu2 - 1)),                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                    (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),  (E*h*(30*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(12*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)), (E*b*h*mu)/(12*a*(mu2 - 1)) - (E*h*(30*a2*b4 - 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),  (E*b*h*mu)/(6*a*(mu2 - 1)) - (E*h*(60*a2*b4 + 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),   (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(6*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                                                               0,                                                                                0,   (E*h3*mu)/(15*a*b*(mu2 - 1)) + (E*h*(60*a4*h2 + 60*b4*h2 - 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),   - (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(60*b*(mu2 - 1)) + (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*a4*h2 - 60*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*b*(mu2 - 1)),        0,                                                                                0,                                                                                0, (E*h3*mu)/(15*a*b*(mu2 - 1)) - (E*h*(120*a4*h2 + 120*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),   - (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(15*b*(mu2 - 1)) + (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*b4*h2 - 60*a4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*b*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,               (E*h3*mu)/(60*a*(mu2 - 1)) + (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*b*h3*mu)/(180*a*(mu2 - 1)) - (E*h*(2*a2*b4*h2 + 10*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,               (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*a*(mu2 - 1)), (E*h*(2*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(180*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*b*h3*mu)/(45*a*(mu2 - 1)) - (E*h*(8*a2*b4*h2 + 40*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                 (E*h3*mu)/(12*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*h*(8*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(45*a*(mu2 - 1)),                                                                                        0,        0},
		{                                                                               0,                                                                                0,             - (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,   (E*a*h3*mu)/(180*b*(mu2 - 1)) - (E*h*(10*a2*b4*h2 + 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*b*(mu2 - 1)),                                                                                      0,  - (E*h*(20*a2*b4*h2 - 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(45*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*b*(mu2 - 1)) + (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                               (E*h3*mu)/(12*(mu2 - 1)),    (E*a*h3*mu)/(45*b*(mu2 - 1)) - (E*h*(40*a2*b4*h2 + 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0, - (E*h*(20*a2*b4*h2 - 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(180*b*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0,    K6rot,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3},
		{- (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(6*b*(mu2 - 1)),                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*h*(60*a2*b4 + 30*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*a*h*mu)/(12*b*(mu2 - 1)),                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0, (E*h*(120*a2*b4 - 30*a4*b2))/(360*a3*b3*(mu2 - 1)) + (E*a*h*mu)/(12*b*(mu2 - 1)),                                   (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,  (E*a*h*mu)/(6*b*(mu2 - 1)) - (E*h*(120*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)),                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                  (3*E*h*mu)/(8*(mu2 - 1)) - (E*h)/(8*(mu2 - 1)), (E*b*h*mu)/(12*a*(mu2 - 1)) - (E*h*(30*a2*b4 - 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   - (E*h)/(8*(mu2 - 1)) - (E*h*mu)/(8*(mu2 - 1)),  (E*h*(30*a2*b4 + 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(12*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                   (E*h)/(8*(mu2 - 1)) - (3*E*h*mu)/(8*(mu2 - 1)),   (E*h*(60*a2*b4 - 60*a4*b2))/(360*a3*b3*(mu2 - 1)) - (E*b*h*mu)/(6*a*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0,                                     (E*h)/(8*(mu2 - 1)) + (E*h*mu)/(8*(mu2 - 1)),  (E*b*h*mu)/(6*a*(mu2 - 1)) - (E*h*(60*a2*b4 + 120*a4*b2))/(360*a3*b3*(mu2 - 1)),                                                                                                0,                                                                                      0,                                                                                        0,        0},
		{                                                                               0,                                                                                0,  (E*h*(120*a4*h2 - 60*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,   (E*h3*mu)/(15*a*b*(mu2 - 1)) + (E*h*(60*a4*h2 + 60*b4*h2 - 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),   - (E*h3*mu)/(60*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),     - (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,  (E*h*(120*b4*h2 - 60*a4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(15*a*b*(mu2 - 1)),     (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),       (E*h3*mu)/(60*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0, (E*h3*mu)/(15*a*b*(mu2 - 1)) - (E*h*(120*a4*h2 + 120*b4*h2 + 84*a2*b2*h2))/(360*a3*b3*(mu2 - 1)),   - (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),     - (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,               (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*a*(mu2 - 1)), (E*h*(2*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(180*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*a*(mu2 - 1)) + (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)), (E*b*h3*mu)/(180*a*(mu2 - 1)) - (E*h*(2*a2*b4*h2 + 10*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,               (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(30*a4*b*h2 - 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*h*(8*a2*b4*h2 - 20*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*b*h3*mu)/(45*a*(mu2 - 1)),                                                                                        0,        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(15*a*(mu2 - 1)) - (E*h*(60*a4*b*h2 + 6*a2*b3*h2))/(360*a3*b3*(mu2 - 1)),  (E*b*h3*mu)/(45*a*(mu2 - 1)) - (E*h*(8*a2*b4*h2 + 40*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                -(E*h3*mu)/(12*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,               (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,  - (E*h*(20*a2*b4*h2 - 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(45*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h3*mu)/(60*b*(mu2 - 1)) + (E*h*(30*a*b4*h2 - 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                                                      0,   (E*a*h3*mu)/(180*b*(mu2 - 1)) - (E*h*(10*a2*b4*h2 + 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0,                                                                                0,                                                                                0,               (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*h3*mu)/(60*b*(mu2 - 1)),                                                                                      0, - (E*h*(20*a2*b4*h2 - 2*a4*b2*h2))/(360*a3*b3*(mu2 - 1)) - (E*a*h3*mu)/(180*b*(mu2 - 1)),        0,                                                                                0,                                                                                0,             - (E*h3*mu)/(15*b*(mu2 - 1)) - (E*h*(60*a*b4*h2 + 6*a3*b2*h2))/(360*a3*b3*(mu2 - 1)),                                                              -(E*h3*mu)/(12*(mu2 - 1)),    (E*a*h3*mu)/(45*b*(mu2 - 1)) - (E*h*(40*a2*b4*h2 + 8*a4*b2*h2))/(360*a3*b3*(mu2 - 1)),        0},
		{                                                                               0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0, -K6rot/3,                                                                                0,                                                                                0,                                                                                                0,                                                                                      0,                                                                                        0,    K6rot}
	};
	return K;
}

math::vector_t<double,2> ElemPLATE::stiffness(const math::vector<double>& property
											 , const math::vector<double>& material) const
{
	return stiffnessStatic(property,material,parameters);
}

math::vector_t<double,2> ElemPLATE::massStatic(const math::vector<double>& property
	 								 		 , const math::vector<double>& material
									 		 , const math::vector<double>& parameters)
{
	return {};
}

math::vector_t<double,2> ElemPLATE::mass(const math::vector<double>& property
											 , const math::vector<double>& material) const
{
	return massStatic(property,material,parameters);
}

void ElemPLATE::calc_parameters(const math::vector<Node>& elem_nodes) {

	parameters = math::vector<double>{
		math::norm(elem_nodes[0].xyz-elem_nodes[1].xyz),
		math::norm(elem_nodes[1].xyz-elem_nodes[2].xyz),
		math::norm(elem_nodes[2].xyz-elem_nodes[3].xyz),
		math::norm(elem_nodes[3].xyz-elem_nodes[0].xyz)
	};
}

size_t ElemPLATE::nnodes() const {
	return 4;
}
size_t ElemPLATE::ndofs_node() const {
	return 6;
}

void ElemPLATELD::tangentStiffness_internalLoad(math::vector_t<double,2>& K
											 , math::vector_t<double,1>& internal_load
										,const math::vector_t<double,1>& property
	 								    ,const math::vector_t<double,1>& material
                                        ,const math::vector_t<double,2>& R0
										,const math::vector_t<double,2>& basis0
                                        ,const math::vector_t<double,3>& Rsum
										,const math::vector_t<double,1>& q) const
{
    /*
    Rsum[0] == R0a, Rsum[1] == R0b
	Rsum[2] == R0c, Rsum[3] == R0d  - total rotation tensors
	
	basis0[0] = t10
	basis0[1] = t20
	basis0[2] = t30
	basis0[3] = t20*
	
	points0 = [ta0, tb0, tc0, td0], ta0 = a0-p0, etc.
	
    */
	
	auto itq = q.begin();
	math::Slice ua(itq+ElemPLATELD::dof::uax,itq+ElemPLATELD::dof::tax);
	math::Slice ta(itq+ElemPLATELD::dof::tax,itq+ElemPLATELD::dof::ubx);
	
    math::Slice ub(itq+ElemPLATELD::dof::ubx,itq+ElemPLATELD::dof::tbx);
	math::Slice tb(itq+ElemPLATELD::dof::tbx,itq+ElemPLATELD::dof::ucx);
	
    math::Slice uc(itq+ElemPLATELD::dof::ucx,itq+ElemPLATELD::dof::tcx);
	math::Slice tc(itq+ElemPLATELD::dof::tcx,itq+ElemPLATELD::dof::udx);
	
    math::Slice ud(itq+ElemPLATELD::dof::udx,itq+ElemPLATELD::dof::tdx);
	math::Slice td(itq+ElemPLATELD::dof::tdx,itq+ElemPLATELD::dof::tdz+1);
	
    
	// Calculate Rm - rotation tensor of middle plate point
	math::vector_t<double,2> basis(3);
	basis[0] = basis0[0] + uc - ua;
	basis[0] /= math::norm(basis[0]);
	basis[1] = basis0[1] + ud - ub;
	basis[2] = math::cross(basis[0],basis[1]);
	basis[2] /= math::norm(basis[2]);
	basis[1] = math::cross(basis[2],basis[0]);
	
	math::vector_t<double,2> Rm = math::dot(basis,basis0);
	
	// Euler vectors for nodes 1-4
    math::vector_t<double,2> thetas(4);
    math::vector<double> thetas_abs(4);
    double coef;
    for (size_t k = 0; k < nnodes(); ++k) {
    	thetas[k] = math::vector_invariant(Rsum[k],Rm);
        thetas_abs[k] = 0.5 * std::asin(0.5*math::norm(thetas[k]));
        coef = (thetas_abs[k] != 0.0) ? (-0.5*thetas_abs[k]/std::sin(thetas_abs[k])) : 0.0;
        thetas[k] *= coef;
    }



	// block of rotation tensor from inital position to actual
    math::vector_t<double,2> Rall_block = math::dot(Rm,R0);
	math::vector_t<double,2> RallT_block = math::transpose(Rall_block);
	
	// Small displacement vector (phisical items same as in global dispalcement vector q)
	math::vector<double> z(q.size());
	auto itz = z.begin();
	math::Slice xia(  itz+ElemPLATELD::dof::uax,itz+ElemPLATELD::dof::tax);
	math::Slice betaa(itz+ElemPLATELD::dof::tax,itz+ElemPLATELD::dof::ubx);
	
    math::Slice xib(  itz+ElemPLATELD::dof::ubx,itz+ElemPLATELD::dof::tbx);
	math::Slice betab(itz+ElemPLATELD::dof::tbx,itz+ElemPLATELD::dof::ucx);
	
    math::Slice xic(  itz+ElemPLATELD::dof::ucx,itz+ElemPLATELD::dof::tcx);
	math::Slice betac(itz+ElemPLATELD::dof::tcx,itz+ElemPLATELD::dof::udx);
	
    math::Slice xid(  itz+ElemPLATELD::dof::udx,itz+ElemPLATELD::dof::tdx);
	math::Slice betad(itz+ElemPLATELD::dof::tdx,itz+ElemPLATELD::dof::tdz+1);
    
	
	math::vector<double> um = 1./4. * (ua+ub+uc+ud);
	auto prmsIt = parameters.begin();
	math::Slice a0(prmsIt+ElemPLATELD::prms::ax,prmsIt+ElemPLATELD::prms::bx);
	math::Slice b0(prmsIt+ElemPLATELD::prms::bx,prmsIt+ElemPLATELD::prms::cx);
	math::Slice c0(prmsIt+ElemPLATELD::prms::cx,prmsIt+ElemPLATELD::prms::dx);
	math::Slice d0(prmsIt+ElemPLATELD::prms::dx,prmsIt+ElemPLATELD::prms::dz+1);
	xia = a0 + ua - um - math::dot(Rm,a0);
	xib = b0 + ub - um - math::dot(Rm,b0);
	xic = c0 + uc - um - math::dot(Rm,c0);
	xid = d0 + ud - um - math::dot(Rm,d0);
	
	betaa = ta + thetas[0];
	betab = tb + thetas[1];
	betac = tc + thetas[2];
	betad = td + thetas[3];
	
	// stiffness matrix
	auto K0 = ElemPLATE::stiffnessStatic(property,material,parameters); // inital (for linear element)
	
	auto K2 = math::zeros<double>(K0); // in 2nd state 
	
	// calculate K2 = Rall * K0 * RallT
	static const size_t blocksize = 3;
	
	block_t K0block(blocksize);
	block_t K2block(blocksize); // upper triangular blocks
	block_t Kblock_sub(blocksize); // lower triangular blocks
								   // which equal to transposed upper triangular blocks
	
	// loop over n blocks of K matrix
	size_t n = ndofs()/blocksize;
	for (size_t i = 0; i < n; ++i) {
		for (size_t j = i; j < n; ++j) {
			
			math::matrix_block_set(K0,i,j,blocksize,blocksize,K0block);
			math::matrix_block_set(K2,i,j,blocksize,blocksize,K2block);
			
			// block calculation
			K2block = math::dot(Rall_block, math::dot(K0block, RallT_block) ); // Kblock_ij = Rall_block * K0block_ij * RallT_block
			
			if (i == j) continue;
			math::matrix_block_set(K2,j,i,blocksize,blocksize,Kblock_sub);
			Kblock_sub = math::transpose(K2block);
		}
	}
	
	// calculate HTK2 = HT * K2 and K1 = HTK2*H
	static const math::vector_t<double,2> H = {
		{ 0.75,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0},
		{    0,  0.75,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0},
		{    0,     0,  0.75,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0},
		{    0,     0,     0, 1.0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0, 1.0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0,   0, 1.0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{-0.25,     0,     0,   0,   0,   0,  0.75,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0},
		{    0, -0.25,     0,   0,   0,   0,     0,  0.75,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0},
		{    0,     0, -0.25,   0,   0,   0,     0,     0,  0.75,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0, 1.0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0, 1.0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0, 1.0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0},
		{-0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0,  0.75,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0},
		{    0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0,  0.75,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0},
		{    0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0,  0.75,   0,   0,   0,     0,     0, -0.25,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0, 1.0,   0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0, 1.0,   0,     0,     0,     0,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0, 1.0,     0,     0,     0,   0,   0,   0},
		{-0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0, -0.25,     0,     0,   0,   0,   0,  0.75,     0,     0,   0,   0,   0},
		{    0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0, -0.25,     0,   0,   0,   0,     0,  0.75,     0,   0,   0,   0},
		{    0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0, -0.25,   0,   0,   0,     0,     0,  0.75,   0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0, 1.0,   0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0, 1.0,   0},
		{    0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0,   0,     0,     0,     0,   0,   0, 1.0}
	};
	
	block_t HTK2block1 = std::move(K0block);
	block_t tmpblock1 = std::move(Kblock_sub);
	block_t tmpblock2 = std::move(K2block)
	, tmpblock3(blocksize), tmpblock4(blocksize);
	for (size_t i = 0; i < 4; ++i) {
		for (size_t k = 0; k < blocksize; ++k) {			
			K[(2*i+1)*blocksize+k] = K2[(2*i+1)*blocksize+k];
		}
	}
	for (size_t k = 0; k < n; ++k) {
		math::matrix_block_set(K,0,k,blocksize,blocksize,HTK2block1);
		
		math::matrix_block_set(K2,0,k,blocksize,blocksize,tmpblock1);
		math::matrix_block_set(K2,2,k,blocksize,blocksize,tmpblock2);
		math::matrix_block_set(K2,4,k,blocksize,blocksize,tmpblock3);
		math::matrix_block_set(K2,6,k,blocksize,blocksize,tmpblock4);
		
		HTK2block1 = 0.25*(3*tmpblock1 - tmpblock2 - tmpblock3 - tmpblock4);
		
		math::matrix_block_set(K,2,k,blocksize,blocksize,HTK2block1);
		HTK2block1 = 0.25*(3*tmpblock2 - tmpblock1 - tmpblock3 - tmpblock4);
		
		math::matrix_block_set(K,4,k,blocksize,blocksize,HTK2block1);
		HTK2block1 = 0.25*(3*tmpblock3 - tmpblock1 - tmpblock2 - tmpblock4);
		
		math::matrix_block_set(K,6,k,blocksize,blocksize,HTK2block1);
		HTK2block1 = 0.25*(3*tmpblock4 - tmpblock1 - tmpblock2 - tmpblock3);
		
	}
	// vector of innectia forces
	internal_load = math::dot(K,z);
	
	// stiffness matrix K
	K = math::dot(K,H);
}


void ElemPLATELD::calc_parameters(const math::vector<Node>& elem_nodes) {
	auto p = 0.25*(elem_nodes[0].xyz+elem_nodes[1].xyz+elem_nodes[2].xyz+elem_nodes[3].xyz);

	parameters = math::vector<double>{
		math::norm(elem_nodes[0].xyz-elem_nodes[1].xyz),
		math::norm(elem_nodes[1].xyz-elem_nodes[2].xyz),
		math::norm(elem_nodes[2].xyz-elem_nodes[3].xyz),
		math::norm(elem_nodes[3].xyz-elem_nodes[0].xyz),
		
		elem_nodes[0].xyz[0] - p[0],
		elem_nodes[0].xyz[1] - p[1],
		elem_nodes[0].xyz[2] - p[2],

		elem_nodes[1].xyz[0] - p[0],
		elem_nodes[1].xyz[1] - p[1],
		elem_nodes[1].xyz[2] - p[2],

		elem_nodes[2].xyz[0] - p[0],
		elem_nodes[2].xyz[1] - p[1],
		elem_nodes[2].xyz[2] - p[2],

		elem_nodes[3].xyz[0] - p[0],
		elem_nodes[3].xyz[1] - p[1],
		elem_nodes[3].xyz[2] - p[2]
	};
}

size_t ElemPLATELD::nnodes() const {
	return 4;
}
size_t ElemPLATELD::ndofs_node() const {
	return 6;
}

} // namespace fem 